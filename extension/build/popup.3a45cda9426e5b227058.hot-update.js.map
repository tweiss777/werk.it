{"version":3,"file":"popup.3a45cda9426e5b227058.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAOA;AAEA;AACA;AACA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAGA;AACA;AACA;AAEA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAcA;;AApGA;;;;;;;;;;;AAbA;AAIA;AAOA;AAEA;;;;;;;;;;;;;;;;ACrBA","sources":["webpack://werkit-chrome-extension/./src/components/context/AuthContext.jsx","webpack://werkit-chrome-extension/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\r\nimport { createContext, useEffect, useState } from 'react';\r\n\r\nimport jwtDecode from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport { getCookie, setCookie } from 'react-use-cookie';\r\nimport useStickyState from '../../hooks/useStickyState';\r\n\r\nexport const api = 'http://localhost:5000';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const axiosJWT = axios.create({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Authorization : `Bearer ${localStorage.getItem(\"token\")}`\r\n    }\r\n})\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = (props) => {\r\n  // Props\r\n  const { children } = props;\r\n\r\n  // State\r\n  const [user, setUser] = useStickyState(false, 'user', true);\r\n  const [token, setToken] = useStickyState(false, 'token', true);\r\n  const [expire, setExpire] = useState(false, 'expire', true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const setError = (error) => console.log(error);\r\n\r\n  axiosJWT.interceptors.request.use(\r\n    async (config) => {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n      const decoded = jwtDecode(token);\r\n      setExpire(decoded.exp);\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const register = async (newUser) => {\r\n    if (loading) return;\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post(`${api}/signup`, newUser);\r\n      const { email, password } = newUser;\r\n      login({ email, password });\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const login = async (credential) => {\r\n    if (loading) return;\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post(`${api}/login`, credential);\r\n      setToken(res.data.refreshToken);\r\n      const decoded = jwtDecode(res.data.refreshToken);\r\n      console.log(decoded);\r\n      setUser(decoded?.user);\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n    // refreshToken();\r\n    setLoading(false);\r\n  };\r\n\r\n  const logout = async () => {\r\n    if (loading) return;\r\n    try {\r\n      setToken(false);\r\n      setUser(false);\r\n      await axios.delete(`${api}/logout`);\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  const refreshToken = async () => {\r\n    if (loading || !getCookie('refreshToken')) return;\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`${api}/token`);\r\n      setToken(response.data.accessToken);\r\n      const decoded = jwtDecode(response.data.accessToken);\r\n      setUser(decoded?.user);\r\n      setExpire(decoded?.exp);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     if (!token) refreshToken();\r\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  //   }, []);\r\n\r\n  // Return\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        expire,\r\n        register,\r\n        login,\r\n        logout,\r\n        axiosJWT,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","__webpack_require__.h = () => (\"de87a05fdd88d5d7916d\")"],"names":[],"sourceRoot":""}